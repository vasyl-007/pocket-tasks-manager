{"version":3,"sources":["components/appHeader/index.js","components/appHeader/AppHeader.js","components/searchPanel/index.js","components/searchPanel/SearchPanel.js","components/todoListItem/TodoListItem.js","components/todoList/index.js","components/todoList/TodoList.js","components/itemStatusFilter/index.js","components/itemStatusFilter/ItemStatusFilter.js","components/itemAddForm/index.js","components/itemAddForm/ItemAddForm.js","components/app/index.js","components/app/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","searchTask","onSearchChange","e","setState","target","value","props","onFilterTodos","this","type","placeholder","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAddItem","App","maxId","todoData","createTodoItem","term","deleteItem","inx","findIndex","el","before","slice","after","addItem","text","newItem","console","log","toggleProperty","filterTodos","search","items","trim","toLowerCase","includes","filterOptions","arr","propName","oldItem","visibleItems","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56c4ddd9.chunk.js","sourcesContent":["import AppHeader from \"./AppHeader\";\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport \"./AppHeader.css\";\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1 className=\"app-header-title\">Tasks Manager</h1>\r\n      <h2>\r\n        {toDo} more to do, {done} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./SearchPanel\";\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from \"react\";\r\nimport \"./SearchPanel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    searchTask: \"\",\r\n  };\r\n  onSearchChange = (e) => {\r\n    this.setState({\r\n      searchTask: e.target.value,\r\n    });\r\n    this.props.onFilterTodos(this.state.searchTask);\r\n  };\r\n  render() {\r\n    const { searchTask } = this.state;\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Type to search a task\"\r\n        onChange={this.onSearchChange}\r\n        value={searchTask}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./TodoListItem.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n      important,\r\n      done,\r\n    } = this.props;\r\n\r\n    let classNames = \"todo-list-item\";\r\n\r\n    if (done) {\r\n      classNames += \" done\";\r\n    }\r\n    if (important) {\r\n      classNames += \" important\";\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}\r\n        >\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nimport TodoListItem from \"../todoListItem/TodoListItem\";\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group todo-list\">{elements}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from \"./ItemStatusFilter\";\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from \"react\";\r\nimport \"./ItemStatusFilter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"done\", label: \"Done\" },\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n    return <div className=\"btn-group\">{buttons}</div>;\r\n  }\r\n}\r\n","import ItemAddForm from \"./ItemAddForm\";\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from \"react\";\r\nimport \"./ItemAddForm.css\";\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n  onLabelChange = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({\r\n      label: value,\r\n    });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddItem(this.state.label);\r\n    this.setState({ label: \"\" });\r\n  };\r\n  render() {\r\n    const { label } = this.state;\r\n    return (\r\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"Add new task\"\r\n          value={label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Add task</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport AppHeader from \"../appHeader\";\r\nimport SearchPanel from \"../searchPanel\";\r\nimport TodoList from \"../todoList\";\r\nimport ItemStatusFilter from \"../itemStatusFilter\";\r\nimport ItemAddForm from \"../itemAddForm\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Make a smile - your first task)\"),\r\n      this.createTodoItem(\"Drink Coffee - the second one\"),\r\n      this.createTodoItem(\"Start typing your own tasks\"),\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\",\r\n  };\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const inx = todoData.findIndex((el) => el.id === id);\r\n      const before = todoData.slice(0, inx);\r\n      const after = todoData.slice(inx + 1);\r\n      const newArray = [...before, ...after];\r\n      return {\r\n        todoData: newArray,\r\n      };\r\n    });\r\n  };\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    };\r\n  }\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: [newItem, ...todoData] };\r\n    });\r\n  };\r\n  onToggleImportant = (id) => {\r\n    console.log(\"Toggle important\", id);\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\"),\r\n      };\r\n    });\r\n  };\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n  toggleProperty(arr, id, propName) {\r\n    const inx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[inx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName],\r\n    };\r\n    return [...arr.slice(0, inx), newItem, ...arr.slice(inx + 1)];\r\n  }\r\n  filterTodos = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  search = (items, term) => {\r\n    if (term.trim() === \"\") {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().includes(term.toLowerCase());\r\n    });\r\n  };\r\n  filterOptions = (items, filter) => {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter((item) => !item.done);\r\n      case \"done\":\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  };\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n    const visibleItems = this.filterOptions(\r\n      this.search(todoData, term),\r\n      filter\r\n    );\r\n    const doneCount = todoData.filter((el) => el.done === true).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onFilterTodos={this.filterTodos} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n\r\n        <ItemAddForm onAddItem={this.addItem} />\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <span className=\"author-name\">Vasyl Manyo &#169; , 2020</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}